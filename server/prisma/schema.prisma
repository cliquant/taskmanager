datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  group     Group     @relation(fields: [groupId], references: [id])
  groupId   Int
  projects  Project[]
  tasks     Task[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
}

model Group {
  id          Int          @id @default(autoincrement())
  displayName String
  permissions Permission[] @relation("GroupPermissions")
  users       User[]
}

model Permission {
  id       Int     @id @default(autoincrement())
  name     String
  category String
  groups   Group[] @relation("GroupPermissions")

  @@unique([name, category], name: "name_category") // Naming the unique constraint
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  assignees User[]
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id           Int        @id @default(autoincrement())
  projectId    Int
  project      Project    @relation(fields: [projectId], references: [id])
  name         String
  description  String
  statusId     Int
  status       TaskStatus @relation(fields: [statusId], references: [id])
  assignees    User[]
  subtasks     Task[]     @relation("ParentTask")
  parentTaskId Int? // This is now a simple optional Int field.
  parentTask   Task?      @relation("ParentTask", fields: [parentTaskId], references: [id]) // Correctly relate back to parent task
  comments     Comment[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model TaskStatus {
  id    Int    @id @default(autoincrement())
  name  String
  tasks Task[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  fromId    Int
  from      User     @relation(fields: [fromId], references: [id])
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
