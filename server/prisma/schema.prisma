datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String         @unique
  password     String
  groupId      Int
  group        Group          @relation(fields: [groupId], references: [id])
  projects     Project[]      @relation("UserProjects")
  tasks        Task[]         @relation("UserTasks")
  comments     Comment[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  UserProjects UserProjects[]
  UserTasks    UserTasks[]
}

model Group {
  id          Int               @id @default(autoincrement())
  displayName String
  users       User[]
  permissions GroupPermission[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model Project {
  id           Int            @id @default(autoincrement())
  name         String
  assignees    User[]         @relation("UserProjects")
  tasks        Task[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  UserProjects UserProjects[]
}

model Task {
  id          Int         @id @default(autoincrement())
  projectId   Int
  project     Project     @relation(fields: [projectId], references: [id])
  name        String
  description String
  status      String
  subtasks    Subtask[]
  comments    Comment[]
  assignees   User[]      @relation("UserTasks")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  UserTasks   UserTasks[]
}

model Subtask {
  id        Int      @id @default(autoincrement())
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  name      String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GroupPermission {
  id         Int      @id @default(autoincrement())
  groupId    Int
  group      Group    @relation(fields: [groupId], references: [id])
  permission Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model UserProjects {
  userId    Int
  projectId Int
  user      User    @relation(fields: [userId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, projectId])
}

model UserTasks {
  userId    Int
  taskId    Int
  user      User    @relation(fields: [userId], references: [id])
  task      Task    @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, taskId])
}
